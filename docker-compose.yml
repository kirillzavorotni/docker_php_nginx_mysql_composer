version: '3'
services:

    #PHP Service
    app:
        build:
            context: .
            dockerfile: ./docker/php/Dockerfile
        image: ${PHP_IMAGE_NAME}
        container_name: ${PHP_CONTAINER_NAME}
        restart: unless-stopped
        tty: true
        environment:
            SERVICE_NAME: app
            SERVICE_TAGS: dev
            PHP_IDE_CONFIG: "serverName=Docker"
        working_dir: /var/www
        volumes:
            - ./:/var/www
            - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
            - ./docker/php/php.ini:/usr/local/etc/php/php.ini
        networks:
            - app-network
        depends_on:
            - db

    #Nginx Service
    webserver:
        build:
            context: ./docker/nginx
            dockerfile: Dockerfile
        image: ${NGINX_IMAGE_NAME}
        container_name: ${NGINX_CONTAINER_NAME}
        restart: unless-stopped
        tty: true
        ports:
            - ${APP_EXTERNAL_PORT}:80
        volumes:
            - ./:/var/www
            - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
        networks:
            - app-network


    #MySQL Service
    db:
        build:
            context: ./docker/mysql
            dockerfile: Dockerfile
        image: ${MYSQL_IMAGE_NAME}
        container_name: ${MYSQL_CONTAINER_NAME}
        restart: unless-stopped
        tty: true
        ports:
            - ${DATABASE_EXTERNAL_PORT}:3306
        environment:
            MYSQL_DATABASE: php-start
            MYSQL_ROOT_PASSWORD: php-start
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        volumes:
            - dbdata:/var/lib/mysql
            - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
        networks:
            - app-network
        depends_on:
            - webserver


#Docker Networks
networks:
    app-network:
        driver: bridge

#Volumes
volumes:
    dbdata:
        driver: local

